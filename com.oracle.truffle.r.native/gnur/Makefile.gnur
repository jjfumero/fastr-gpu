#
# Copyright (c) 2015, 2015, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

# This extracts, configures and builds GnuR for the current platform.
# FastR does not, obviously, need all of GnuR to be built; only those pieces
# that it shares, but is simpler and safer to just build all of it. The relevant 
# pieces are then copied to other FastR directories.
#
# The configuration of GnuR for FastR is platform specific and a special step
# is needed for Linux where, ordinarily, the PCRE library is compiled non-PIC
# as it is built as a library archive. FastR needs a shared library, which can be
# enabled by setting --enable-R-shlib, but unfortunately this also sets the visibility
# of the functions to hidden, so FastR cannot find them. There does not appear to be a 
# way to fix this simply using configure args, so we patch up the Makeconf file.

# Portions of the Makeconf file are then extracted to use in building the native
# parts of FastR, especially packages with native code.

.PHONY: all config config_update build clean

OSNAME := $(shell uname)
ifeq ($(OSNAME), Linux)
else ifeq ($(OSNAME), SunOS)
else ifeq ($(OSNAME), Darwin)
else
all:
	@echo "This Makefile does not know how to compile for $(OSNAME)"
	@false
endif

all: Makefile $(GNUR_HOME) config build

$(GNUR_HOME): 
	tar xf $(TOPDIR)/../lib/R-$(R_VERSION).tar.gz

config: $(GNUR_HOME)/Makefile config_update

ifeq ($(OSNAME), Linux)
config_update: Makeconf.done

Makeconf.done: edMakeconf
	ed $(GNUR_HOME)/Makeconf < edMakeconf
	touch Makeconf.done
else
config_update:
endif

$(GNUR_HOME)/Makefile:
	(cd $(GNUR_HOME); ./configure --with-x=no --without-recommended-packages >& gnur_configure.log)


build: $(GNUR_HOME)/bin/R

$(GNUR_HOME)/bin/R: $(GNUR_HOME)/Makeconf 
	(cd $(GNUR_HOME); make >& gnur_make.log)

HAVE_MAKEFILE := $(shell [ -f $(GNUR_HOME)/Makefile ] && echo "Makefile.exists")
clean: cleangnur
	rm -f Makeconf.done

ifeq ($(HAVE_MAKEFILE),Makefile.exists)
cleangnur:
	(cd $(GNUR_HOME); make distclean)
else
cleangnur:
endif
